[{"/home/ssb/Music/Our-Train-Is-Here/src/index.js":"1","/home/ssb/Music/Our-Train-Is-Here/src/reportWebVitals.js":"2","/home/ssb/Music/Our-Train-Is-Here/src/App.js":"3","/home/ssb/Music/Our-Train-Is-Here/src/components/Login.js":"4","/home/ssb/Music/Our-Train-Is-Here/src/components/NavigateBar.js":"5","/home/ssb/Music/Our-Train-Is-Here/src/components/Register.js":"6","/home/ssb/Music/Our-Train-Is-Here/src/components/route/About.js":"7","/home/ssb/Music/Our-Train-Is-Here/src/components/route/TrainRoutes.js":"8","/home/ssb/Music/Our-Train-Is-Here/src/components/route/PostRoutes.js":"9","/home/ssb/Music/Our-Train-Is-Here/src/components/Trains/GetTrain.js":"10","/home/ssb/Music/Our-Train-Is-Here/src/components/Trains/PostTrain.js":"11","/home/ssb/Music/Our-Train-Is-Here/src/components/station/Stations.js":"12","/home/ssb/Music/Our-Train-Is-Here/src/components/station/PostStationDetails.js":"13","/home/ssb/Music/Our-Train-Is-Here/src/components/routedetails/GetrouteDetails.js":"14","/home/ssb/Music/Our-Train-Is-Here/src/components/routedetails/PostRouteDetails.js":"15","/home/ssb/Music/Our-Train-Is-Here/src/components/User Component/search.js":"16","/home/ssb/Music/Our-Train-Is-Here/src/components/User Component/SearchTrain.js":"17","/home/ssb/Desktop/workspace/TrainManageementSystem/src/index.js":"18","/home/ssb/Desktop/workspace/TrainManageementSystem/src/reportWebVitals.js":"19","/home/ssb/Desktop/workspace/TrainManageementSystem/src/App.js":"20","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/Login.js":"21","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/Register.js":"22","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/NavigateBar.js":"23","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/route/About.js":"24","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/route/TrainRoutes.js":"25","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/route/PostRoutes.js":"26","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/Trains/GetTrain.js":"27","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/Trains/PostTrain.js":"28","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/station/Stations.js":"29","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/station/PostStationDetails.js":"30","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/User Component/SearchTrain.js":"31","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/routedetails/GetrouteDetails.js":"32","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/User Component/ResultSearch.js":"33","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/User Component/SearchBox.js":"34","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/Trains/MakeTrainSchedule.js":"35","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/Trains/PostRouteDetails.js":"36"},{"size":588,"mtime":1672895696109,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":1672810531000,"results":"39","hashOfConfig":"38"},{"size":2198,"mtime":1673419808428,"results":"40","hashOfConfig":"38"},{"size":859,"mtime":1673672231982,"results":"41","hashOfConfig":"38"},{"size":736,"mtime":1673602686058,"results":"42","hashOfConfig":"38"},{"size":2633,"mtime":1672925931777,"results":"43","hashOfConfig":"38"},{"size":1187,"mtime":1672909806866,"results":"44","hashOfConfig":"38"},{"size":2679,"mtime":1673595134547,"results":"45","hashOfConfig":"38"},{"size":2281,"mtime":1673594383246,"results":"46","hashOfConfig":"38"},{"size":2189,"mtime":1673672307940,"results":"47","hashOfConfig":"38"},{"size":2767,"mtime":1673674620325,"results":"48","hashOfConfig":"38"},{"size":3250,"mtime":1673618576301,"results":"49","hashOfConfig":"38"},{"size":1876,"mtime":1673594652999,"results":"50","hashOfConfig":"38"},{"size":4098,"mtime":1673618650910,"results":"51","hashOfConfig":"38"},{"size":3978,"mtime":1673350290398,"results":"52","hashOfConfig":"38"},{"size":4110,"mtime":1673445658956,"results":"53","hashOfConfig":"38"},{"size":2876,"mtime":1673444554168,"results":"54","hashOfConfig":"38"},{"size":588,"mtime":1672895696109,"results":"55","hashOfConfig":"56"},{"size":362,"mtime":1672810531000,"results":"57","hashOfConfig":"56"},{"size":2630,"mtime":1674628276835,"results":"58","hashOfConfig":"56"},{"size":864,"mtime":1674467034515,"results":"59","hashOfConfig":"56"},{"size":2638,"mtime":1674467057267,"results":"60","hashOfConfig":"56"},{"size":1201,"mtime":1674467101350,"results":"61","hashOfConfig":"56"},{"size":1187,"mtime":1672909806866,"results":"62","hashOfConfig":"56"},{"size":3100,"mtime":1674628625422,"results":"63","hashOfConfig":"56"},{"size":4131,"mtime":1674801820293,"results":"64","hashOfConfig":"56"},{"size":2297,"mtime":1674709644737,"results":"65","hashOfConfig":"56"},{"size":2768,"mtime":1674719257837,"results":"66","hashOfConfig":"56"},{"size":3331,"mtime":1674451362011,"results":"67","hashOfConfig":"56"},{"size":2243,"mtime":1674451206131,"results":"68","hashOfConfig":"56"},{"size":2352,"mtime":1674728611566,"results":"69","hashOfConfig":"56"},{"size":3897,"mtime":1674654468725,"results":"70","hashOfConfig":"56"},{"size":4171,"mtime":1674829188161,"results":"71","hashOfConfig":"56"},{"size":2274,"mtime":1674647875195,"results":"72","hashOfConfig":"56"},{"size":3888,"mtime":1674827090705,"results":"73","hashOfConfig":"56"},{"size":7195,"mtime":1674798752948,"results":"74","hashOfConfig":"56"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"qcvrsy",{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},"1sd6w41",{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"135"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"135"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"135"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"135"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"135"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"135"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"135"},"/home/ssb/Music/Our-Train-Is-Here/src/index.js",[],[],[],"/home/ssb/Music/Our-Train-Is-Here/src/reportWebVitals.js",[],[],"/home/ssb/Music/Our-Train-Is-Here/src/App.js",["197"],[],"\nimport { Link, Route, Routes } from 'react-router-dom';\nimport { Login } from './components/Login';\nimport { Register } from './components/Register';\nimport React, { Component } from 'react'\n\nimport NavigateBar from './components/NavigateBar';\nimport About from './components/route/About';\nimport  TrainRoutes  from './components/route/TrainRoutes';\nimport PostRoutes from './components/route/PostRoutes';\nimport GetTrain from './components/Trains/GetTrain';\nimport PostTrain from './components/Trains/PostTrain';\nimport Stations from './components/station/Stations';\nimport PostStationDetails from './components/station/PostStationDetails';\nimport GetrouteDetails from './components/routedetails/GetrouteDetails';\nimport PostRouteDetails from './components/routedetails/PostRouteDetails';\nimport Search from './components/User Component/search';\nimport SearchTrain from './components/User Component/SearchTrain';\n\n\n\n class App extends Component {\n\n  render(){\n  return (\n   <>\n    <div>\n        <Routes>\n          <Route path='/' element={<Login />} />\n          <Route path='/register' element={<Register />} ></Route>\n\n          <Route path='/about' element={<About/>}></Route>\n          <Route path='/nav' element={<NavigateBar/>}></Route>\n\n          by routes\n          <Route path='/routes' element={<TrainRoutes/>} ></Route>\n          <Route path='/addroutes' element={<PostRoutes/>} ></Route>\n\n          by train\n          <Route path='/trains' element={<GetTrain/>} ></Route>\n          <Route path='/addtrains' element={<PostTrain />} ></Route>\n          {/* <Route path='/addtrains/:id' element={<PostTrain />} ></Route> */}\n\n          by station\n          <Route path='/station' element={<Stations/>} ></Route>\n          <Route path='/addstation' element={<PostStationDetails/>} ></Route>\n          by route routeDetails\n          <Route path='/timeschedule' element={<GetrouteDetails/>} ></Route>\n          <Route path='/addroutedetails' element={<PostRouteDetails/>} ></Route>\n    \n          <Route path='/search' element={<Search/>} ></Route>\n          <Route path='/searchTrain' element={<SearchTrain/>} ></Route>\n        </Routes>\n    \n    </div>\n    </>\n  )}\n}\nexport default App;","/home/ssb/Music/Our-Train-Is-Here/src/components/Login.js",[],[],"/home/ssb/Music/Our-Train-Is-Here/src/components/NavigateBar.js",["198"],[],"/home/ssb/Music/Our-Train-Is-Here/src/components/Register.js",[],[],"/home/ssb/Music/Our-Train-Is-Here/src/components/route/About.js",[],[],"/home/ssb/Music/Our-Train-Is-Here/src/components/route/TrainRoutes.js",["199","200"],[],"/home/ssb/Music/Our-Train-Is-Here/src/components/route/PostRoutes.js",["201"],[],"/home/ssb/Music/Our-Train-Is-Here/src/components/Trains/GetTrain.js",["202"],[],"/home/ssb/Music/Our-Train-Is-Here/src/components/Trains/PostTrain.js",["203","204"],[],"/home/ssb/Music/Our-Train-Is-Here/src/components/station/Stations.js",[],[],"/home/ssb/Music/Our-Train-Is-Here/src/components/station/PostStationDetails.js",["205"],[],"/home/ssb/Music/Our-Train-Is-Here/src/components/routedetails/GetrouteDetails.js",[],[],[],"/home/ssb/Music/Our-Train-Is-Here/src/components/routedetails/PostRouteDetails.js",["206"],[],"import axios from 'axios';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\n\nconst PostRouteDetails = () => {\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    const [postRouteDetails, setPostRouteDetails] = useState({\n        // scheduleTime: ''\n    })\n    const [addTrain, setAddTrain] = useState([])\n\n    const [station, setStation] = useState([])\n\n    //Train dropdown\n    useEffect(() => {\n        axios.get(\"http://localhost:8080/admin/traindetails/get\")\n            .then(response => {\n                console.log(response.data)\n                setAddTrain(response.data)\n            })\n    }, [])\n\n    //station dropdown\n    useEffect(() => {\n        axios.get(`http://localhost:8080/admin/station/get`)\n            .then(\n                response => {\n                    console.log(response.data)\n                    setStation(response.data)\n             \n                }\n            )\n    }, [])\n\n    //for update\n    useEffect(()=>{\n        if(location.state?.routedetail){\n            setPostRouteDetails(location.state.routedetail)\n        }\n\n    },[])\n\n\n    const changeHandler = (e) => {\n        setPostRouteDetails(prev => ({ ...prev, [e.target.name]: e.target.value }))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        if (!postRouteDetails.trainDetails) return\n\n        if (postRouteDetails.trainDetails) {\n            const train = { id: postRouteDetails.trainDetails }\n            postRouteDetails.train = train\n        }\n\n\n        if (!postRouteDetails.stationDetails) return\n\n        if (postRouteDetails.stationDetails) {\n            const station = { \n                id:postRouteDetails.stationDetails }\n            postRouteDetails.station = station\n        }\n\n        axios.post(\"http://localhost:8080/admin/route-details/post\", postRouteDetails)\n            .then(\n                () => {\n                    navigate('/timeschedule')\n                }\n            ).catch(\n                error => {\n                    console.log(error)\n                }\n            )\n    }\n\n    \n    return (\n        <div className='stylefrom'>\n            <div className='forms' >\n                <form onSubmit={submitHandler}>\n                    <h3>Add Route Details</h3>\n                    <div >\n                        <label htmlFor='text'>TrainName</label><br></br>\n                        <select name='trainDetails' id='id' onChange={changeHandler}>\n                            <option selected value={''} >select Train Name</option>\n                            {_.map(addTrain, train => <option key={train.id} value={train.id}>{train.trainName}</option>)}\n                        </select>\n                    </div><br />\n                    <div >\n                        <label htmlFor='text'>Station Id</label><br></br>\n                        <select name='stationDetails' id='id' onChange={changeHandler}>\n                      \n                            <option selected value={''}>select Station Name</option>\n                            {_.map(station, stations => <option key={stations.id} value={stations.id} >{stations.stationName}<br /></option>)}\n                        </select>\n                    </div><br />\n                    <div >\n                        <label htmlFor='text'>Arraival Time</label><br></br>\n                        <input type={\"text\"} placeholder=\"HH:mm:ss\" name='scheduleTime' value={postRouteDetails.scheduleTime} onChange={changeHandler} required ></input><br></br><br></br>\n                    </div>\n                    <div>\n                        <button type='submit'>-Add-</button><br></br><br />\n                    </div>\n                    <div>\n                        <Link to={\"/timeschedule\"}> Back</Link>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nexport default PostRouteDetails\n","/home/ssb/Music/Our-Train-Is-Here/src/components/User Component/search.js",["207","208"],[],"import axios from 'axios';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react'\nimport { Link, NavLink, useLocation } from 'react-router-dom';\n\nconst Search =()=>{\n    const [routeDetails, setRouteDetails] = useState([])\n    const [filterRouteDetails, setFilterRouteDetails] = useState([])\n    const [searchTrain, setSearchTrain] = useState([])\n\n    const location = useLocation()\n\n    useEffect(() => {\n        getRouteDetails();\n    }, [])\n\n    const getRouteDetails = () => {\n        axios.get(`http://localhost:8080/admin/route-details/get`)\n            .then(\n                response => {\n                    console.log(response.data)\n               \n                    setFilterRouteDetails(response.data)\n                }\n            ).catch(\n                error => {\n                    console.log(error)\n                }\n            )\n    }\n    const deleteRouteHandler = (id) => {\n        axios.delete(`http://localhost:8080/admin/route-details/delete/${id}`)\n            .then(response => {\n                console.log(response)\n                setRouteDetails(response.data)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n    useEffect(() => {\n        if (location.state?.train) {\n            setSearchTrain(location.state.train)\n        }\n      }, [])\n\n    const searchHandler = (e) => {\n        // _.map(routeDetails,r=>{\n        //    _.map(r.train,(t)=>{\n        //     console.log(t.destination,t.source);\n        //    })\n        // })\n       \n            const filterResult = filterRouteDetails\n                .filter((item => item.train.trainName.toLowerCase().includes(e.target.value.toLowerCase())\n                    || item.station.stationName.toLowerCase().includes(e.target.value.toLowerCase())));\n\n            setRouteDetails(filterResult);\n        \n        setSearchTrain(e.targets.value);\n    }\n\n\n    return (\n        <div>\n            <nav>\n                <u id=\"nav\">\n                    <li><NavLink to=\"/addroutedetails\">Add More Station</NavLink></li>\n\n                </u>\n            </nav><br />\n\n            <div className='SearchBar'>\n                <label htmlFor='text'>Search By Train or Station Name</label><br /><br />\n                <input className='SearchInput' type='search' name='searchTrain' placeholder=\"search....\"\n                    value={searchTrain} onChange={(e) => searchHandler(e)} ></input><br /><br />\n            </div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>S.No</th>\n                        <th>RouteId</th>\n                        <th>Train Name</th>\n                        <th>Station Name</th>\n                        <th>Train Id</th>\n                        <th>Time</th>\n                        <th>Delete</th>\n                        <th>update</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {\n                        routeDetails.map((routedetail, index) =>\n                            <tr key={routedetail.id}>\n\n                                <td>{index + 1}</td>\n                                <td>{routedetail?.train.route.routeId}</td>\n                                <td>{routedetail?.train.trainName}</td>\n\n                                <td>{routedetail.station?.stationName}</td>\n                                <td>{routedetail.train?.id}</td>\n                                <td>{routedetail?.scheduleTime}</td>\n\n                                <td>\n                                    <button onClick={() => deleteRouteHandler(routedetail.id)}>Delete</button></td>\n                                 <td> <Link  to={'/addroutedetails'} state={{routedetail:routedetail}}><button >Update</button></Link>  \n                                </td>\n\n                            </tr>\n                        )\n                    }\n                </tbody>\n            </table><br />\n            <Link to='/nav'>\n                <button >back to Home page</button><br /><br />\n            </Link>\n        </div>\n    ) \n}\n\nexport default Search\n","/home/ssb/Music/Our-Train-Is-Here/src/components/User Component/SearchTrain.js",["209"],[],"\nimport axios from 'axios';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react'\nimport { Link, NavLink } from 'react-router-dom';\n\nconst SearchTrain = () => {\n\n    const [trains, setTrains] = useState([])\n\n    const[filterSource,setfilterSource]=useState([])\n\n    const[searchsource , setSearchsource]=useState([])\n    const[searchDestination , setsearchDestination]=useState([])\n    \n\n\n    useEffect(() => {\n      getRoutes();\n    }, [])\n  \n    const getRoutes = () => {\n      axios.get(\"http://localhost:8080/admin/traindetails/get\")\n        .then(response => {\n          console.log(response.data)\n         \n          setfilterSource(response.data)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }\n\n  \n\n  \n    const searchHandlerSource=(e)=>{\n\n        const filterResult=filterSource.filter((item=>item.route.source.toLowerCase().includes(e.target.value.toLowerCase())))\n\n        setTrains(filterResult)\n\n        setSearchsource(e.target.value)\n    }\n      \n    const searchHandlerDestination=(e)=>{\n\n        const filterResult=filterSource.filter((item=>item.route.destination.toLowerCase().includes(e.target.value.toLowerCase())))\n\n        setTrains(filterResult)\n\n        setsearchDestination(e.target.value)\n    }\n  \n  \n  \n    return (\n  \n      <div>\n        <nav>\n          <u id=\"nav\">\n            <li><NavLink to=\"/addtrains\">Add More Trains</NavLink></li>\n  \n          </u>\n        </nav>\n  \n<div>\n    <label>Source</label><br/>\n    <input type={'search'} name='searchsource' value={searchsource} onInput={(e)=>searchHandlerSource(e)}></input><br/>\n    \n</div>\n<div>\n    <label>Destination</label><br/>\n    <input type={'search'} name='searchDestination' value={searchDestination} onInput={(e)=>searchHandlerDestination(e)}></input><br/>\n    \n</div>\n\n        <table>\n          <thead>\n            <tr>\n              <th>S.No</th>\n              <th>Train Id</th>\n              <th>Train Number</th>\n              <th>Train Name</th>\n              <th>Source</th>\n              <th>Destination</th>\n           \n            </tr>\n          </thead>\n  \n          <tbody>\n            {\n              trains.map((train, index) =>\n                <tr key={train.id}>\n                  <td>{index + 1} </td>\n                  <td> {train.id} </td>\n                  <td> {train.trainNumber} </td>\n                  <td> {train.trainName} </td>\n                  <td> {train.route?.source} </td>\n                  <td>{train.route?.destination}</td>\n                 <td><Link to={'/search'} state={{train:train.trainName}}><button>Train Schedule</button></Link></td>\n                </tr>\n              )\n            }\n  \n          </tbody>\n        </table><br />\n        <Link to='/nav'>\n          <button >back to Home page</button><br /><br />\n        </Link>\n      </div>\n    )\n  }\n  \nexport default SearchTrain\n","/home/ssb/Desktop/workspace/TrainManageementSystem/src/index.js",[],[],[],"/home/ssb/Desktop/workspace/TrainManageementSystem/src/reportWebVitals.js",[],[],"/home/ssb/Desktop/workspace/TrainManageementSystem/src/App.js",["210"],[],"\nimport { Link, Route, Routes } from 'react-router-dom';\nimport { Login } from './components/Login';\nimport { Register } from './components/Register';\nimport React, { Component } from 'react'\n\nimport NavigateBar from './components/NavigateBar';\nimport About from './components/route/About';\nimport  TrainRoutes  from './components/route/TrainRoutes';\nimport PostRoutes from './components/route/PostRoutes';\nimport GetTrain from './components/Trains/GetTrain';\nimport PostTrain from './components/Trains/PostTrain';\nimport Stations from './components/station/Stations';\nimport PostStationDetails from './components/station/PostStationDetails';\nimport GetrouteDetails from './components/routedetails/GetrouteDetails';\n\nimport ResultSearch from './components/User Component/ResultSearch';\nimport SearchTrain from './components/User Component/SearchTrain';\nimport SearchBox from './components/User Component/SearchBox';\nimport MakeTrainSchedule from './components/Trains/MakeTrainSchedule';\nimport PostRouteDetails from './components/Trains/PostRouteDetails';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\n\n class App extends Component {\n\n  render(){\n  return (\n   <>\n    <div>\n        <Routes>\n          <Route path='/' element={<Login />} />\n          <Route path='/register' element={<Register />} ></Route>\n\n          <Route path='/about' element={<About/>}></Route>\n          <Route path='/nav' element={<NavigateBar/>}></Route>\n\n          by routes\n          <Route path='/routes' element={<TrainRoutes/>} ></Route>\n          <Route path='/addroutes' element={<PostRoutes/>} ></Route>\n\n          by train\n          <Route path='/trains' element={<GetTrain/>} ></Route>\n          <Route path='/addtrains' element={<PostTrain />} ></Route>\n          <Route path='/makeschedule' element={<MakeTrainSchedule />} ></Route>\n          {/* <Route path='/addtrains/:id' element={<PostTrain />} ></Route> */}\n\n          by station\n          <Route path='/station' element={<Stations/>} ></Route>\n          <Route path='/addstation' element={<PostStationDetails/>} ></Route>\n          by route routeDetails\n          <Route path='/timeschedule' element={<GetrouteDetails/>} ></Route>\n          <Route path='/addroutedetails' element={<PostRouteDetails/>} ></Route>\n    \n        by user\n          <Route path='/search' element={<ResultSearch/>} ></Route>\n          <Route path='/searchTrain' element={<SearchTrain/>} ></Route>\n          <Route path='/usersearch' element={<SearchBox/>} ></Route>\n        </Routes>\n    \n    </div>\n    <ToastContainer />\n    </>\n  )}\n}\nexport default App;","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/Login.js",[],[],"/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/Register.js",[],[],"/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/NavigateBar.js",[],[],"/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/route/About.js",[],[],"/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/route/TrainRoutes.js",["211","212"],[],"import { Button } from '@mui/material';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { ImExit } from 'react-icons/im';\nimport { Link, NavLink } from 'react-router-dom';\nimport '../../css/border.css';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport HomeIcon from '@mui/icons-material/Home';\n\n\nconst TrainRoutes = () => {\n\n    const [routes, setRoutes] = useState([])\n\n    useEffect(() => {\n        getRoutes();\n    }, [])\n\n    const getRoutes = () => {\n        axios.get(\"http://localhost:8080/admin/route/get\")\n            .then(response => {\n                setRoutes(response.data)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n\n    const deleteRouteHandler = (routeId, e) => {\n        axios.delete(`http://localhost:8080/admin/route/delete/${routeId}`)\n            .then(response => {\n                setRoutes(response.data)\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n\n\n\n    return (\n\n        <div>\n            <h1 className='h1'> Route Details </h1><br />\n            <div style={{ display: 'flex', justifyContent: 'space-between', margin: '0 2rem .5rem 2rem' }}>\n                <NavLink style={{ textDecoration: 'none' }} to='/nav'>\n                    <Button variant=\"contained\" color='success' onClick={() => { <Link to='/nav'></Link> }} startIcon={<HomeIcon />}>\n                        <span style={{ paddingTop: '3px' }}>Home</span>\n                    </Button>\n                </NavLink>\n                <NavLink to=\"/addroutes\"><button className='button-update '>Add More Routes</button></NavLink>\n            </div>\n\n            <table id=\"customers\">\n                <thead>\n                    <tr>\n                        <th>S.No</th>\n                        <th>Route Id</th>\n                        <th>Route Name</th>\n                        <th>From Station</th>\n                        <th>DESTINATION</th>\n                        <th>Update</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {\n                        routes.map((route, index) =>\n                            <tr key={route.routeId}>\n                                <td>{index + 1}</td>\n                                <td> {route.routeId}</td>\n                                <td>{route.routeName}</td>\n                                <td> {route.source}</td>\n                                <td> {route.destination}</td>\n                                <td  >\n                                    <button className=\"button-del\" onClick={() => deleteRouteHandler(route.routeId)}>Delete</button> </td>\n                                <td  >   <Link to={'/addroutes'} state={{ route: route }}><button className='button-update ' >Update</button></Link>\n                                </td>\n                            </tr>\n\n                        )\n                    }\n\n\n                </tbody>\n            </table><br />\n\n        </div>\n    )\n}\n\nexport default TrainRoutes;","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/route/PostRoutes.js",["213"],[],"import axios from 'axios'\n\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\n\nconst PostRoutes = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n\n\n    const [routes, setRoutes] = useState({\n        routeName: '',\n        source: '',\n        destination: ''\n    })\n\n    const[station,setStation]=useState([])\n\n    //update\n    useEffect(() => {\n        if (location.state?.route) {\n            setRoutes(location.state.route)\n        }\n    }, [])\n\n    //dropdown\n    useEffect(()=>{\n   axios.get(`http://localhost:8080/admin/station/get`)\n        .then(\n            response => {\n                console.log(response.data)\n                setStation(_.orderBy(response.data,\"id\"))\n                // let fromStation=[]\n                // const stationName=_.map(response.data,c=>{\n                //     let name={};\n                //     name.label=c.stationName;\n                //     name.id=c.id\n                //     fromStation.push(name)\n                // })\n                // setFromStation(fromStation);\n    })\n},[])\n\n    const changeHandler = (e) => {\n        setRoutes(prev => ({ ...prev, [e.target.name]: e.target.value }))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        axios.post('http://localhost:8080/admin/route/post', routes)\n\n            .then(response => {\n                navigate('/routes')\n                console.log(response.data);\n            }).catch(error => {\n                console.log(error)\n                toast.error(\"From and To station can not be same\");\n            })\n    }\n\n\n\n    return (\n        <div className='stylefrom'>\n            <div className='forms' >\n                <form onSubmit={submitHandler}>\n                    <h3>Add more Routes</h3>\n                    {/* <div>\n                   {<ComboBox data={fromStation} />}\n                    </div> */}\n                    <div>\n                        < label htmlFor='text'> Route Name </label><br />\n    \n                        <input type=\"text\" name=\"routeName\" value={routes.routeName} onChange={changeHandler} required /><br /><br />\n                    </div>\n                    <div>\n                        < label htmlFor='text'> From </label><br />\n                      \n                        {/* <select name='source' id='id' onChange={changeHandler}  >                     \n                      <option selected value={''}>select Station Name</option>\n                      {_.map(station, stations => <option key={stations.id} value={stations.stationName} >{stations.stationName}<br /></option>)}\n                  </select> */}\n\n                    <input list='data' name='source' placeholder='search from station' onChange={changeHandler} value={routes.source} ></input>\n                    <datalist id='data' >\n                    <option selected value={''}>select Station Name</option>\n                      {_.map(station, stations => <option key={stations.id} value={stations.stationName} >{stations.stationName}</option>)}\n                    </datalist>\n\n                    </div>\n\n                    <div>\n                        <label htmlFor='text'>To </label><br />\n                        <select name='destination' id='id' onChange={changeHandler} value={routes.destination}>\n                      <option selected value={''}>select Station Name</option>\n                      {_.map(station, stations => <option key={stations.id} value={stations.stationName} >{stations.stationName}<br /></option>)}\n                  </select>\n                  </div>\n                    <div>\n                        <button className='button-update ' type=\"submit\" >{routes.id ? \"Update\" : \"Save\"}</button><br />\n                    </div><br />\n                    <div>\n                        <Link to={'/routes'}>   <button className='button-update '>back</button></Link>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\nexport default PostRoutes\n\n\n","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/Trains/GetTrain.js",[],[],"/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/Trains/PostTrain.js",["214"],[],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport _ from 'lodash'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst PostTrain = () => {\n\n  const location = useLocation()\n\n  const navigate = useNavigate();\n\n  const [addRoute, setAddRoute] = useState([])\n\n  const [trainDetails, setTrainDetais] = useState({\n    trainNumber: '',\n    trainName: ''\n  })\n\n  useEffect(() => {\n    if (location.state?.train) {\n      setTrainDetais(location.state.train)\n    }\n  }, [])\n\n\n  const changeHandler = e => {\n    setTrainDetais(prev => ({ ...prev, [e.target.name]: e.target.value }))\n  }\n\n\n\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/admin/route/get\")\n      .then(response => {\n        setAddRoute(response.data)\n      })\n  },[])\n\n\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n\n    // if (!trainDetails.route) return\n\n    if (typeof(trainDetails.route)==='string' ) {\n      const route = { routeId: trainDetails.route }\n      trainDetails.route = route;\n    }\n\n    axios.post('http://localhost:8080/admin/traindetails/post', trainDetails)\n      .then(\n        response => {\n          navigate('/trains')\n        }\n      )\n      .catch(\n        error => {\n          console.log(error)\n        }\n      )\n  }\n  return (\n    <div className='stylefrom'>\n      <div className='forms' >\n        <form onSubmit={submitHandler}>\n          <h3>Add more Routes</h3>\n\n          <div>\n            < label htmlFor='text'> Train Number </label><br />\n            <input type=\"text\" name=\"trainNumber\"\n              value={trainDetails.trainNumber} onChange={changeHandler} required /><br /><br />\n          </div>\n\n          <div>\n            <label htmlFor='text'>Train Name </label><br />\n            <input type=\"text\" name=\"trainName\" value={trainDetails.trainName} onChange={changeHandler} required /><br /><br />\n          </div>\n\n          <div>\n            <label htmlFor='text'>Select route Name</label><br />\n            <select name='route' onChange={changeHandler} value={trainDetails.route?.routeId} >\n              <option selected value={\"\"}>Select route Name</option>\n              {_.map(addRoute, r => <option key={r.routeId} value={r.routeId}>{r.routeName}</option>)}\n            </select>\n          </div><br />\n\n{/* <div >\n            <Select className=\"col-md-6\" options={addRoute} />\n          </div> */}\n\n        \n\n          <div>\n            <button class=\"button-del\" type=\"submit\">{trainDetails.id ? \"Update\" : \"save\"}</button>\n          </div><br/>\n          <div>\n            <Link to={\"/trains\"}> <button class=\"button-del\">back</button></Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\nexport default PostTrain\n ","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/station/Stations.js",[],[],"/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/station/PostStationDetails.js",["215"],[],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\n\nconst PostStationDetails = () => {\n    const navigate = useNavigate()\n    const location = useLocation()\n    const [stations, setStations] = useState({\n        stationCode:'',\n        stationName: ''\n    })\n\n    useEffect(() => {\n        if (location.state?.station) {\n            setStations(location.state.station)\n        }\n    },[])\n\n    const changeHandler = (e) => {\n        setStations(prev => ({ ...prev, [e.target.name]: e.target.value }))\n    }\n\n    const clickHandler = (e) => {\n        e.preventDefault();\n        axios.post(\"http://localhost:8080/admin/station/post\", stations)\n            .then(\n                response => {\n                    navigate('/station')\n                }\n            ).catch(\n                error => {\n                    console.log(error)\n                }\n            )\n    }\n    return (\n        <div className='stylefrom'>\n            <div className='forms' >\n                <form>\n                    <h3>Add Stations</h3><br/><br/>\n                    <div >\n                        <label htmlFor='text'>Enter Station code</label><br/><br/>\n                        <input  type={'text'} placeholder=\"station name..\" name='stationCode' value={stations.stationCode} onChange={changeHandler} required ></input><br></br><br></br>\n                    </div>\n                    <div >\n                        <label htmlFor='text'>Enter Station Name</label><br/><br/>\n                        <input  type={'text'} placeholder=\"station name..\" name='stationName' value={stations.stationName} onChange={changeHandler} required ></input><br></br><br></br>\n                    </div>\n                    \n                    <div>\n                        <button className='button-update ' onClick={clickHandler}>{stations.id ? \"Update\" : \"Save\"}</button><br/><br/>\n                    </div>\n                    <div>\n                        <Link to={\"/station\"}><button className='button-update ' > Back</button></Link>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nexport default PostStationDetails\n","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/User Component/SearchTrain.js",["216","217","218","219"],[],"\nimport axios from 'axios';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom';\n\nconst SearchTrain = () => {\n\n  const [trains, setTrains] = useState([])\n\n const [props,setProps]= useState({\n\n  })\n\n   const location= useLocation()\n\n  // useEffect(()=>{\n  // setProps(lo)\n  // },[])\n\n\n\n  useEffect(() => {\n    if(location.state?.route){\n    console.log(location.state?.route)\n    const source=location.state.route?.source\n    const destination=location.state.route?.destination\n    getRoutes(source,destination);\n    }\n    else if(location.state?.resultSearch){\n      console.log(location.state?.resultSearch.route.source+\"varutha\");\n       const source=location.state?.resultSearch.route?.source\n       const destination=location.state?.resultSearch.route?.destination\n       getRoutes(source,destination)\n    }\n  }, [])\n\n  const getRoutes = (source,destination) => {\n    console.log(source)\n    console.log(destination)\n    axios.get(`http://localhost:8080/admin/traindetails/getBySourceAndDest?source=${source}&destination=${destination}`)\n      .then(response => {\n        console.log(response.data)\n\n        setTrains(response.data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n  return (\n\n    <div>\n      <table id=\"customers\">\n        <thead>\n          <tr>\n            <th>S.No</th>\n            <th>Route Name</th>\n            <th>Train Number</th>\n            <th>Train Name</th>\n            <th>FROM Station</th>\n            <th>Destination</th>\n            <th>View Schedule</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {\n            trains.map((train, index) =>\n              <tr key={train.id}>\n                <td>{index + 1} </td>\n\n                <td>{train.route.routeName}</td>\n                <td> {train.trainNumber} </td>\n                <td> {train.trainName} </td>\n                <td> {train.route?.source} </td>\n                <td>{train.route?.destination}</td>\n                <td><Link to={'/search'} state={{ train: train}}><button>Train Schedule</button></Link></td>\n              </tr>\n            )\n          }\n\n        </tbody>\n      </table><br />\n      <Link to='/usersearch'>\n        <button >Hit back to search</button><br /><br />\n      </Link>\n    </div>\n  )\n}\n\nexport default SearchTrain\n","/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/routedetails/GetrouteDetails.js",[],[],"/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/User Component/ResultSearch.js",["220","221","222"],[],"/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/User Component/SearchBox.js",[],[],"/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/Trains/MakeTrainSchedule.js",["223","224","225"],[],"/home/ssb/Desktop/workspace/TrainManageementSystem/src/components/Trains/PostRouteDetails.js",["226","227"],[],"import axios from 'axios';\nimport _ from 'lodash';\nimport React, { useEffect, useState } from 'react'\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport moment from 'moment';\n\nconst PostRouteDetails = () => {\n    const navigate = useNavigate()\n    const location = useLocation()\n\n    const [postRouteDetails, setPostRouteDetails] = useState({\n        \n    })\n    const [addTrain, setAddTrain] = useState([])\n\n    const [station, setStation] = useState([])\n\n    const[stateId,setStateId]=useState({\n\n    })\n    //Train dropdown\n    useEffect(() => {\n        axios.get(\"http://localhost:8080/admin/traindetails/get\")\n            .then(response => {\n                console.log(response.data)\n                setAddTrain(response.data)\n            })\n    }, [])\n\n    //station dropdown\n    useEffect(() => {\n        axios.get(`http://localhost:8080/admin/station/get`)\n            .then(\n                response => {\n                    console.log(response.data)\n                    setStation(response.data)\n             \n                }\n            )\n    }, [])\n\n    //for update\n    useEffect(()=>{\n        if(location.state?.routedetail){\n            setPostRouteDetails(location.state?.routedetail)\n            setStateId(location.state?.routedetail?.train?.id)\n        }\n         else if(location.state?.train){\n                    console.log(location.state?.train)\n                    setStateId(location.state?.train)\n                 \n                }\n    },[])\n    \n\n    //for Train id\n    // useEffect(()=>{\n    //     if(location.state?.addMoreStations){\n    //         console.log(location.state?.addMoreStations.train.id)\n    //         setPostRouteDetails(location.state?.addMoreStations.train.id)\n    //     }\n    // },[])\n\n\n    const changeHandler = (e) => {\n        if(e.target.name===\"station\"){\n            let train=_.filter(station,s=>s.stationName===e.target.value)\n            setPostRouteDetails(prev => ({ ...prev, [e.target.name]: train[0] }))\n        }else{\n        setPostRouteDetails(prev => ({ ...prev, [e.target.name]: e.target.value }))\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n//console.log(postRouteDetails, \"postRouteDetails\");\n        if (!postRouteDetails.train) return\n        if(typeof(postRouteDetails.train)==='string'){\n            const train = { id: postRouteDetails.train }\n            postRouteDetails.train = train\n        }\n\n       \n\n        if (!postRouteDetails.station) return\n\n        if (typeof(postRouteDetails.station) === 'string') {\n            const station = { \n                id:postRouteDetails.station }\n            postRouteDetails.station = station\n        }\n        console.log(postRouteDetails, \"here\");\n        axios.post(\"http://localhost:8080/admin/route-details/post\", postRouteDetails)\n            .then(\n                (res) => {\n                    navigate('/makeSchedule',  { state: { trainName:postRouteDetails.train.id } } )\n                    console.log(res.data);\n                }\n            ).catch(\n                error => {\n                    console.log(error)\n                }\n            )\n    }\n//     const searchStationId=(e)=>{\n//        let train=_.filter(station,s=>s.stationName===e.target.value)\n//        setPostRouteDetails(prev => ({ ...prev, [e.target.name]: train[0]?.id }))\n//   }\n\n    \n    return (\n        <div className='stylefrom'>\n            <div className='forms' >\n                <form onSubmit={(e) => submitHandler(e)}>\n                    <h3>Add Train Schedule</h3>\n                    <div>\n                        <label htmlFor='text'>TrainName</label><br></br>\n                        <select name='train' id='id' onChange={changeHandler} value={postRouteDetails.train?.id} >\n                        <option  className='dropdown-cont' selected value={''} >select Train Name</option>\n                            {_.map(addTrain, train => <option  key ={train.id} value={train.id}>{train.trainName}</option>)}\n                        </select>\n        \n\n                    </div><br />\n                    <div >\n                        <label htmlFor='text'>Station Name</label><br></br>\n                        {/* <select name='station' id='id' onChange={changeHandler} value={postRouteDetails.station?.id}>\n                      \n                            <option selected value={''}>select Station Name</option>\n                            {_.map(station, stations => <option key={stations.id} value={stations.id} >{stations.stationName}<br /></option>)}\n                        </select> */}\n                               {/* <input list='data' name='station' placeholder='search from station' onChange={changeHandler}></input>\n                    <datalist id='data' >\n                    <option selected value={''}>select Station Name</option>\n                      {_.map(station, stations => <option key={stations.id} value={stations.id} >{stations.stationName}</option>)}\n                    </datalist> */}\n                             <input list='data' name='station' placeholder='search from station' onChange={changeHandler}  autocomplete=\"off\"></input>\n                    <datalist id='data' >\n                    <option selected value={''}>select Station Name</option>\n                      {_.map(station, stations => <option key={stations.id} value={stations.stationName} >{stations.stationName}</option>)}\n                    </datalist>\n                    </div><br />\n                    <div >\n                        <label htmlFor='text'>Arraival Time</label><br></br>\n                        <input type={\"time\"} placeholder=\"HH:mm\" name='scheduleTime' value={postRouteDetails.scheduleTime} onChange={changeHandler} required ></input><br/><br/>\n                    </div>\n                    <div >\n                        <label htmlFor='text'>Halt Time</label><br></br>\n                        <input type={\"text\"} placeholder=\"halt time\" name='haltTime' value={postRouteDetails.haltTime} onChange={changeHandler} required ></input><br/><br/>\n                    </div>\n                    <div >\n                        <label htmlFor='text'>platformNumber</label><br></br>\n                        <input type={\"text\"} placeholder=\"PF..\" name='platformNumber' value={postRouteDetails.platformNumber} onChange={changeHandler} required ></input><br/><br/>\n                    </div>\n                    <div >\n                        <label htmlFor='text'>Kilometers</label><br></br>\n                        <input type={\"number\"} placeholder=\"KMS...\" name='kilometers' value={postRouteDetails.kilometers} onChange={changeHandler} required ></input><br/><br/>\n                    </div>\n                    <div>\n                        <button className='button-update ' type='submit'>{postRouteDetails.id ? \"Update\" : \"Save\"}</button><br></br><br />\n                    </div>\n                    <div>\n                        <Link to={\"/makeschedule\"} state={{ trainName:stateId }}> <button className='button-update '>Back</button></Link>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\n\nexport default PostRouteDetails\n",{"ruleId":"228","severity":1,"message":"229","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"229","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"232","line":10,"column":12,"nodeType":"230","messageId":"231","endLine":10,"endColumn":16},{"ruleId":"228","severity":1,"message":"233","line":10,"column":18,"nodeType":"230","messageId":"231","endLine":10,"endColumn":25},{"ruleId":"234","severity":1,"message":"235","line":21,"column":8,"nodeType":"236","endLine":21,"endColumn":10,"suggestions":"237"},{"ruleId":"228","severity":1,"message":"238","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":18},{"ruleId":"228","severity":1,"message":"239","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"240","line":25,"column":6,"nodeType":"236","endLine":25,"endColumn":8,"suggestions":"241"},{"ruleId":"234","severity":1,"message":"242","line":16,"column":7,"nodeType":"236","endLine":16,"endColumn":9,"suggestions":"243"},{"ruleId":"234","severity":1,"message":"244","line":44,"column":7,"nodeType":"236","endLine":44,"endColumn":9,"suggestions":"245"},{"ruleId":"228","severity":1,"message":"246","line":2,"column":8,"nodeType":"230","messageId":"231","endLine":2,"endColumn":9},{"ruleId":"234","severity":1,"message":"240","line":44,"column":10,"nodeType":"236","endLine":44,"endColumn":12,"suggestions":"247"},{"ruleId":"228","severity":1,"message":"246","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":9},{"ruleId":"228","severity":1,"message":"229","line":2,"column":10,"nodeType":"230","messageId":"231","endLine":2,"endColumn":14},{"ruleId":"228","severity":1,"message":"248","line":4,"column":10,"nodeType":"230","messageId":"231","endLine":4,"endColumn":16},{"ruleId":"228","severity":1,"message":"238","line":7,"column":8,"nodeType":"230","messageId":"231","endLine":7,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":27,"column":8,"nodeType":"236","endLine":27,"endColumn":10,"suggestions":"249"},{"ruleId":"234","severity":1,"message":"240","line":25,"column":6,"nodeType":"236","endLine":25,"endColumn":8,"suggestions":"250"},{"ruleId":"234","severity":1,"message":"242","line":17,"column":7,"nodeType":"236","endLine":17,"endColumn":9,"suggestions":"251"},{"ruleId":"228","severity":1,"message":"246","line":3,"column":8,"nodeType":"230","messageId":"231","endLine":3,"endColumn":9},{"ruleId":"228","severity":1,"message":"252","line":11,"column":9,"nodeType":"230","messageId":"231","endLine":11,"endColumn":14},{"ruleId":"228","severity":1,"message":"253","line":11,"column":15,"nodeType":"230","messageId":"231","endLine":11,"endColumn":23},{"ruleId":"234","severity":1,"message":"254","line":36,"column":6,"nodeType":"236","endLine":36,"endColumn":8,"suggestions":"255"},{"ruleId":"228","severity":1,"message":"256","line":10,"column":8,"nodeType":"230","messageId":"231","endLine":10,"endColumn":19},{"ruleId":"234","severity":1,"message":"240","line":25,"column":8,"nodeType":"236","endLine":25,"endColumn":10,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":92,"column":1,"nodeType":"260","messageId":"261","endLine":115,"endColumn":31},{"ruleId":"228","severity":1,"message":"262","line":11,"column":11,"nodeType":"230","messageId":"231","endLine":11,"endColumn":16},{"ruleId":"228","severity":1,"message":"263","line":16,"column":11,"nodeType":"230","messageId":"231","endLine":16,"endColumn":19},{"ruleId":"234","severity":1,"message":"264","line":30,"column":8,"nodeType":"236","endLine":30,"endColumn":10,"suggestions":"265"},{"ruleId":"228","severity":1,"message":"266","line":5,"column":8,"nodeType":"230","messageId":"231","endLine":5,"endColumn":14},{"ruleId":"234","severity":1,"message":"267","line":53,"column":7,"nodeType":"236","endLine":53,"endColumn":9,"suggestions":"268"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'show' is assigned a value but never used.","'setShow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.state.route'. Either include it or remove the dependency array.","ArrayExpression",["269"],"'DeleteIcon' is defined but never used.","'Select' is defined but never used.","React Hook useEffect has a missing dependency: 'location.state.train'. Either include it or remove the dependency array.",["270"],"React Hook useEffect has a missing dependency: 'location.state.station'. Either include it or remove the dependency array.",["271"],"React Hook useEffect has a missing dependency: 'location.state.routedetail'. Either include it or remove the dependency array.",["272"],"'_' is defined but never used.",["273"],"'ImExit' is defined but never used.",["274"],["275"],["276"],"'props' is assigned a value but never used.","'setProps' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state?.resultSearch' and 'location.state.route'. Either include them or remove the dependency array.",["277"],"'TimelineDot' is defined but never used.",["278"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'train' is assigned a value but never used.","'navigate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state?.train' and 'location.state?.trainName'. Either include them or remove the dependency array.",["279"],"'moment' is defined but never used.","React Hook useEffect has missing dependencies: 'location.state?.routedetail' and 'location.state?.train'. Either include them or remove the dependency array.",["280"],{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"283","fix":"289"},{"desc":"281","fix":"290"},{"desc":"283","fix":"291"},{"desc":"285","fix":"292"},{"desc":"293","fix":"294"},{"desc":"283","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [location.state.route]",{"range":"300","text":"301"},"Update the dependencies array to be: [location.state.train]",{"range":"302","text":"303"},"Update the dependencies array to be: [location.state.station]",{"range":"304","text":"305"},"Update the dependencies array to be: [location.state.routedetail]",{"range":"306","text":"307"},{"range":"308","text":"303"},{"range":"309","text":"301"},{"range":"310","text":"303"},{"range":"311","text":"305"},"Update the dependencies array to be: [location.state?.resultSearch, location.state.route]",{"range":"312","text":"313"},{"range":"314","text":"303"},"Update the dependencies array to be: [location.state?.train, location.state?.trainName]",{"range":"315","text":"316"},"Update the dependencies array to be: [location.state?.routedetail, location.state?.train]",{"range":"317","text":"318"},[484,486],"[location.state.route]",[599,601],"[location.state.train]",[455,457],"[location.state.station]",[1185,1187],"[location.state.routedetail]",[1332,1334],[607,609],[565,567],[479,481],[893,895],"[location.state?.resultSearch, location.state.route]",[956,958],[862,864],"[location.state?.train, location.state?.trainName]",[1493,1495],"[location.state?.routedetail, location.state?.train]"]